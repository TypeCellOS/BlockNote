import * as fs from "node:fs";
import * as path from "node:path";
import { Project, getExampleProjects, groupProjects } from "./util";

/*
 `genDocs` generates the Sandpack Playgrounds for the website. 
 Note that these files are not checked in to the repo, so this command should always be run before running / building the site
 */

const dir = path.parse(import.meta.url.replace("file://", "")).dir;

const template = (project: Project, readme: string) => `---
path: /examples/${project.slug}
---

<script setup>
import { useData } from 'vitepress'
import { Playground } from '../components/playground'	
import { examples } from '../components/files'	

const dir = "../../../../examples/${project.slug}";
const { params } = useData()

const files = import.meta.glob("../../../../examples/${project.slug}/**/*", { as: 'raw', eager: true });
const passedFiles = Object.fromEntries(Object.entries(files).map(([fullPath, content]) => {
    const filename = fullPath.substring(dir.length)
    return [filename, {
        filename,
        code: content,
        hidden: filename.endsWith(".md") || filename.endsWith("main.tsx"),
    }];
}));

</script>

${readme}

<Playground :files="passedFiles" />
`;

async function generateCodeForExample(project: Project) {
  const target = path.resolve(
    dir,
    "../../website/docs/examples/" + project.slug + ".md"
  );

  const readmeFile = fs.readFileSync(
    path.join("../../", project.pathFromRoot, "/README.md"),
    "utf-8"
  );

  const code = template(project, readmeFile);

  fs.writeFileSync(target, code);
}

async function generateSidebar(projects: Project[]) {
  const target = path.resolve(
    dir,
    "../../website/docs/.vitepress/sidebar-examples.ts"
  );

  const groups = groupProjects(projects);

  const sidebarItems = Object.entries(groups).map(([group, projects]) => {
    return {
      text: group,
      items: projects.map((project) => {
        return {
          text: project.title,
          link: `/examples/${project.slug}`,
        };
      }),
    };
  });

  const code = `// generated by dev-scripts/examples/genDocs.ts
  export const EXAMPLES_SIDEBAR = ${JSON.stringify(
    sidebarItems,
    undefined,
    2
  )};`;

  fs.writeFileSync(target, code);
}

const projects = getExampleProjects().filter((p) => p.config?.docs === true);

for (const project of projects) {
  console.log("generating code for example", project);
  await generateCodeForExample(project);
}

await generateSidebar(projects);
