name: build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 100
      - run: jq '.packageManager' package.json | tr -d '"pnpm@'
        id: package-manager-version

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.package-manager-version.outputs.stdout }}

      - uses: nrwl/nx-set-shas@v3

      - uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"
          node-version-file: '.nvmrc'

      - name: Cache NX
        uses: actions/cache@v4
        with:
          path: node_modules/.cache/nx/
          key: nx-${{ env.NX_BRANCH }}-${{ env.NX_RUN_GROUP }}-${{ github.sha }}
          restore-keys: |
            nx-${{ env.NX_BRANCH }}-${{ env.NX_RUN_GROUP }}-
            nx-${{ env.NX_BRANCH }}-
            nx-

      - run: sudo apt-get update && sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev pkg-config

      - name: Install Dependencies
        run: pnpm install --prefer-offline && pnpm rebuild

      - name: Lint packages
        run: pnpm run lint

      - name: Build packages
        run: pnpm run build

      - name: Run unit tests
        run: pnpm run test

      - name: Upload webpack stats artifact (editor)
        uses: relative-ci/agent-upload-artifact-action@v2
        with:
          webpackStatsFile: ./playground/dist/webpack-stats.json
          artifactName: relative-ci-artifacts-editor

  playwright:
    name: "Playwright Tests - ${{ matrix.browser }}"
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.51.1-noble
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 100

      - run: jq '.packageManager' package.json | tr -d '"pnpm@'
        id: package-manager-version
  
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.package-manager-version.outputs.stdout }}

      - uses: nrwl/nx-set-shas@v3

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"

      - name: Cache NX
        uses: actions/cache@v4
        with:
          path: node_modules/.cache/nx/
          key: nx-${{ env.NX_BRANCH }}-${{ env.NX_RUN_GROUP }}-${{ github.sha }}
          restore-keys: |
            nx-${{ env.NX_BRANCH }}-${{ env.NX_RUN_GROUP }}-
            nx-${{ env.NX_BRANCH }}-
            nx-

      - run: apt-get update && apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev pkg-config

      - name: Install dependencies
        run: pnpm install --prefer-offline && pnpm rebuild

      - name: Build packages
        run: pnpm run build

      - name: Run server and Playwright tests
        run: |
          pnpm run start > /dev/null & 
          pnpx wait-on http://localhost:3000
          cd tests && HOME=/root npx playwright test --project ${{ matrix.browser }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}
          path: tests/playwright-report/
          retention-days: 30
